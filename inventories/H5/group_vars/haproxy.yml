---
vrrp_groups:
  vg1:
      private:
        vip: "10.100.51.14"
        range: "10.100.51.14/24"
        id: 101
        iface: "eth0"
        #scripts: "haproxy"


vrrp_scripts:
  haproxy:
    scripts: "killall -0 haproxy"
    interval: 2

haproxy_stats_ip: 127.0.0.1

haproxy_backends:
  - web_cluster
  - mysql_cluster

haproxy_frontends:
  public-web:
    bind:
      - "*:80 id 10"
    default_backend: web_cluster
    log_format: haproxy_lua
    backends:
      web_cluster:
        host:
          web01: 10.100.51.10:80 check
          web02: 10.100.51.11:80 check backup
        domains:
          - www.101.dk
          - 101.dk
        option: "httpchk GET /"
        mode: "http"
        balance: "leastconn"
  mysql-intern:
    bind:
      - "*:3306 id 10"
    mode: "tcp"
    default_backend: "mysql_cluster"
    backends:
      mysql_cluster:
        host:
          mysql01: 10.100.51.20:3306 check port 9200 inter 12000 rise 3 fall 3
          mysql02: 10.100.51.21:3306 check port 9200 inter 12000 rise 3 fall 3
          mysql03: 10.100.51.22:3306 check port 9200 inter 12000 rise 3 fall 3
        option: "httpchk"
        mode: "tcp"
        balance: "leastconn"
        #domains:
        #  - 

    #letsencrypt_backend: 127.0.0.1:8088
    #method_to_backend:
    #  - name: es
    #    domain: es.101.dk
    #    method:
    #      - GET
    #      - OPTIONS
    #      - HEAD
    #    backend: elasticsearch
    #    block_other: true
    #redirect_path:
    #  101dk:
    #    url: https
    #    aliases:
    #      - 101.dk
    #    paths:
    #      - /
    #redirect:
    #  henrik:
    #    url: https://101.dk
    #    aliases:
    #      - 101.dk
    #force_https_domains:
    #  - 101.dk
  
#haproxy_resolvers:
#  google:
#    nameservers:
#      public-0: 8.8.8.8:53
#      public-1: 8.8.4.4:53

#  elasticsearch:
#    host:
#      sogndk_es: es.101:80
#    custom_check: "check inter 5000 resolvers google"
#    domains:
#      -
